#!/bin/bash
#
# uncenz-kill -- kill screencasting/dumpcapping session that uncenz-1st started
#
# Copyright (C) 2015 Miroslav Rovis, <http://www.CroatiaFidelis.hr/>
#
# released under BSD license, pls. see LICENSE
#
# Pls. note that with this initial presentation of this program-to-be, or this
# idea for a program to develop, you probably will not get any meaningful
# results if you try and run concurrent sessions or if you try and run another
# nonrelated instance of ffmpeg or dumpcap process.
#
hostname_sh=$(hostname|sed 's/\(...\).*/\1/')
echo "\$hostname_sh: "; echo $hostname_sh
tail -1 $SSLKEYLOGFILE > ~/SSLLAST_$(cat .uncenz-ts)_${hostname_sh}_active.txt
echo stored ~/SSLLAST_$(cat .uncenz-ts)_${hostname_sh}_active.txt ...
chmod 600 ~/SSLLAST_$(cat .uncenz-ts)_${hostname_sh}_active.txt
ls -l ~/SSLLAST_$(cat .uncenz-ts)_${hostname_sh}.txt \
	~/SSLLAST_$(cat .uncenz-ts)_${hostname_sh}_active.txt
	ssllast_hash_active=$(sha256sum \
		~/SSLLAST_$(cat .uncenz-ts)_${hostname_sh}_active.txt|cut -d' ' -f1)
	ssllast_hash=$(sha256sum \
		~/SSLLAST_$(cat .uncenz-ts.old)_${hostname_sh}.txt|cut -d' ' -f1)
	echo \$ssllast_hash_active, then \$ssllast_hash:
	echo $ssllast_hash_active
	echo $ssllast_hash
if [ "$ssllast_hash_active" == "$ssllast_hash" ]; then
	echo
	echo "#####"
	echo
	# uncenz-kill is typically called to kill the session, even though it runs
	# if a session is not running, wording is for the typical case.
	echo " The last key taken during this session "
	echo " is the same as at the start of last session "
	echo
	echo " If \$SSLKEYLOGFILE enable browser was active during this session"
	echo " and opened https pages, it may have malfunctioned. "
	echo
	echo "                            ^^^      ^^^^^^^^^^^^^ "
	echo "[[play some sound here]]"
	echo
	echo "But if no SSL-key logging browser was active, all may still be fine."
	echo
	echo "Hit Enter after you have read the above."
	echo
	read FAKE
	echo
	echo "#####"
fi
rm ~/SSLLAST_$(cat .uncenz-ts)_${hostname_sh}_active.txt

ffpid=`sudo -s ps aux | egrep 'ffmpeg' | grep x11grab | awk '{ print $2}'`
dupid=`sudo -s ps aux | egrep '[d]umpcap' | awk '{ print $2}'`

echo \$ffpid is: # ff for ffmpeg
echo $ffpid

echo \$dupid is: # du for dumpcap
echo $dupid

echo "To kill ffmpeg and dumpcap, hit Enter"
echo "Or you can terminate this script without killing ffmpeg and dumpcap"
echo "with issuing: Ctrl-C"

read FAKE

sudo -s kill $dupid $ffpid
#kill $dupid $ffpid
